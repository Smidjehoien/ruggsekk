name: Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Configure (PR)
        if: github.event_name == 'pull_request'
        run: echo 'BRANCH_NAME=${{ format(github.head_ref, 'refs/heads/', '') }}' >> $GITHUB_ENV

      - name: Configure (Branch)
        if: github.event_name != 'pull_request'
        run: echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/})" >> $GITHUB_ENV

      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ^1.16

      - name: Install Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'

      - name: Cache Go Modules
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Cache Ruckstack Cache
        uses: actions/cache@v2
        with:
          path: ~/go/src/github.com/ruckstack/ruckstack/tmp/work_dir/cache
          key: ${{ runner.os }}-ruckstack-cache

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Install NPM dependencies
        run: bash -c "cd ops-dashboard && npm install"

      - name: Build
        run: bash BUILD.sh

      - name: Save artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ruckstack-all-${{ env.BRANCH_NAME }}
          path: |
            ~/work/ruckstack/ruckstack/out/artifacts/linux/ruckstack*.tar.gz
            ~/work/ruckstack/ruckstack/out/artifacts/mac/ruckstack*.tar.gz
            ~/work/ruckstack/ruckstack/out/artifacts/win/ruckstack*.zip

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.PACKAGE_PAT }}

      - name: Docker Build
        run: bash BUILD.sh build_docker snapshot-${{ env.BRANCH_NAME }}
      - name: Docker Push
        run: bash BUILD.sh push_docker snapshot-${{ env.BRANCH_NAME }}
